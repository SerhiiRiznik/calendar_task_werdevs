{"version":3,"sources":["components/Header/Header.tsx","components/Calendar/utils.ts","components/Calendar/createCalendar.ts","state/popUpSlice.ts","components/Calendar/DateIndicator.tsx","components/Calendar/Calendar.tsx","components/Home/Home.tsx","components/AboutUs/Aboutus.tsx","components/PopUp/PopUp.tsx","App.tsx","state/store.ts","index.tsx"],"names":["Header","className","exact","activeClassName","to","getSpecificDate","month","dayOfMonth","year","moment","toDate","getDaysInMonth","daysInMonth","getMonth","date","getYear","getMonthDayYear","format","createCalendar","firstWeekday","startOf","weekday","getFirstWeekdayOfMonth","result","prev","getPrevMonthYear","prevDaysInMonth","j","push","currentMonth","i","length","daysToAdd","next","getNextMonthYear","k","popUpSlice","createSlice","name","initialState","show","day","reducers","showPopUp","state","action","payload","hidenPopUp","actions","DateIndicator","selectDate","setSelectDate","dispatch","useDispatch","changeDate","e","target","getAttribute","monthDates","map","key","selected","active","before","data-active-month","data-date","toString","onClick","Calendar","useState","event","monthSet","current","getMonthSet","toUpperCase","index","Home","Aboutus","PopUp","useSelector","popUp","App","path","component","store","configureStore","reducer","history","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.566c2b2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header_content\">\r\n        <div className=\"logo\">\r\n          <span>\r\n            w<br />e\r\n          </span>\r\n          Rdevs\r\n        </div>\r\n        <nav className=\"header_nav\">\r\n          <ul>\r\n            <li>\r\n              <NavLink\r\n                exact\r\n                className=\"nav_link\"\r\n                activeClassName=\"selected\"\r\n                to=\"/calendar_task_werdevs\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                className=\"nav_link\"\r\n                activeClassName=\"selected\"\r\n                to=\"/about\"\r\n              >\r\n                About us\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import moment from \"moment\";\r\n\r\nexport const getSpecificDate = (month: any, dayOfMonth: any, year: any) => {\r\n  return moment(`${month}-${dayOfMonth}-${year}`, \"MM-DD-YYYY\").toDate();\r\n};\r\nexport const getDaysInMonth = (month: any, year: any) => {\r\n  return moment(`${month}-${year}`, \"MM-YYYY\").daysInMonth();\r\n};\r\nexport const getFirstWeekdayOfMonth = (month: any, year: any) => {\r\n  return moment(`${month}-${year}`, \"MM-YYYY\").startOf(\"month\").weekday();\r\n};\r\nexport const getDayOfMonth = (date: any) => moment(date).date();\r\nexport const getMonth = (date: any) => moment(date).month();\r\nexport const getYear = (date: any) => moment(date).year();\r\nexport const getToday = () => moment().toDate();\r\nexport const getReadableWeekday = (date: any) => moment(date).format(\"dddd\");\r\nexport const getReadableMonthDate = (date: any) => moment(date).format(\"MMMM Do\");\r\nexport const getMonthDayYear = (date: any) => moment(date).format(\"MM-DD-YYYY\");\r\nexport const getMonthSet = (selectDate: any) => {\r\n  const month = getMonth(selectDate) + 1;\r\n  const result = {\r\n    current: selectDate,\r\n    prev: getSpecificDate(month - 1, 1, getYear(selectDate)),\r\n    next: getSpecificDate(month + 1, 1, getYear(selectDate)),\r\n  };\r\n  if (month === 1) {\r\n    result.prev = getSpecificDate(12, 1, getYear(selectDate) - 1);\r\n  }\r\n  if (month === 12) {\r\n    result.next = getSpecificDate(1, 1, getYear(selectDate) + 1);\r\n  }\r\n  return result;\r\n};\r\n","import moment from \"moment\";\r\nimport { getDaysInMonth, getFirstWeekdayOfMonth } from \"./utils\";\r\n\r\nexport const createCalendar = (month: any, year: any) => {\r\n  const daysInMonth = getDaysInMonth(month, year);\r\n  const firstWeekday = getFirstWeekdayOfMonth(month, year);\r\n  const result = [];\r\n\r\n  const getNextMonthYear = (month: any, year: any) => {\r\n    if (month === 1) {\r\n      return {\r\n        month: month + 1,\r\n        year,\r\n      };\r\n    }\r\n    return {\r\n      month: 12,\r\n      year: year + 1,\r\n    };\r\n  };\r\n  const getPrevMonthYear = (month: any, year: any) => {\r\n    if (month === 1) {\r\n      return {\r\n        month: 12,\r\n        year: year - 1,\r\n      };\r\n    }\r\n    return {\r\n      month: month - 1,\r\n      year,\r\n    };\r\n  };\r\n\r\n  const prev = getPrevMonthYear(month, year);\r\n  const prevDaysInMonth = getDaysInMonth(prev.month, prev.year);\r\n\r\n  for (let j = firstWeekday - 1; j >= 0; j--) {\r\n    result.push({\r\n      date: moment(\r\n        `${prev.month}-${prevDaysInMonth - j}-${prev.year}`,\r\n        \"MM-DD-YYYY\"\r\n      ).toDate(),\r\n      currentMonth: false,\r\n    });\r\n  }\r\n  for (let i = 1; i <= daysInMonth; i++) {\r\n    result.push({\r\n      date: moment(`${month}-${i}-${year}`, \"MM-DD-YYYY\").toDate(),\r\n      currentMonth: true,\r\n    });\r\n  }\r\n  if (result.length < 42) {\r\n    const daysToAdd = 42 - result.length;\r\n    const next = getNextMonthYear(month, year);\r\n\r\n    for (let k = 1; k <= daysToAdd; k++) {\r\n      result.push({\r\n        date: moment(`${next.month}-${k}-${next.year}`, \"MM-DD-YYYY\").toDate(),\r\n        currentMonth: false,\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  month: \"\",\r\n  day: \"\",\r\n};\r\n\r\nconst popUpSlice = createSlice({\r\n  name: \"popUp\",\r\n  initialState,\r\n  reducers: {\r\n    showPopUp: (state, action) => {\r\n      const { month, day } = action.payload;\r\n      state.show = true;\r\n      state.month = month;\r\n      state.day = day;\r\n    },\r\n    hidenPopUp: (state) => {\r\n      state.show = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { showPopUp, hidenPopUp } = popUpSlice.actions;\r\nexport default popUpSlice.reducer;\r\n","import React from \"react\";\r\nimport { createCalendar } from \"./createCalendar\";\r\nimport \"./Calendar.scss\";\r\nimport {\r\n  getDayOfMonth,\r\n  getMonth,\r\n  getMonthDayYear,\r\n  getToday,\r\n  getYear,\r\n} from \"./utils\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showPopUp } from \"../../state/popUpSlice\";\r\n\r\nconst DateIndicator = ({ selectDate, setSelectDate }: any) => {\r\n  const dispatch = useDispatch();\r\n  const changeDate = (e: any) => {\r\n    setSelectDate(e.target.getAttribute(\"data-date\"));\r\n    dispatch(\r\n      showPopUp({\r\n        month: moment(e.target.getAttribute(\"data-date\")).format(\"MMMM\"),\r\n        day: moment(e.target.getAttribute(\"data-date\")).format(\"Do dddd\"),\r\n      })\r\n    );\r\n  };\r\n  const datesInMonth = createCalendar(\r\n    getMonth(selectDate) + 1,\r\n    getYear(selectDate)\r\n  );\r\n  const monthDates = datesInMonth.map((i, key) => {\r\n    const selected =\r\n      getMonthDayYear(selectDate) === getMonthDayYear(i.date) ? \"selected\" : \"\";\r\n    const active =\r\n      moment(i.date).format(\"MMM Do YY\") ===\r\n      moment(getToday()).format(\"MMM Do YY\")\r\n        ? \"active\"\r\n        : \"\";\r\n    const before = i.currentMonth ? \"\" : \"before\";\r\n\r\n    return (\r\n      <div\r\n        className={`date ${selected} ${active} ${before}`}\r\n        data-active-month={i.currentMonth}\r\n        data-date={i.date.toString()}\r\n        key={key}\r\n        onClick={changeDate}\r\n      >\r\n        {getDayOfMonth(i.date)}\r\n      </div>\r\n    );\r\n  });\r\n  return <div className=\"dates\">{monthDates}</div>;\r\n};\r\n\r\nexport default DateIndicator;\r\n","// import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Calendar.scss\";\r\nimport moment from \"moment\";\r\nimport DateIndicator from \"./DateIndicator\";\r\nimport { getMonthSet } from \"./utils\";\r\n\r\nconst Calendar = () => {\r\n  const [selectDate, setSelectDate] = useState(moment().toDate());\r\n  const changeDate = (event: any) => {\r\n    setSelectDate(event.target.getAttribute(\"data-date\"));\r\n  };\r\n  const monthSet = getMonthSet(selectDate);\r\n  return (\r\n    <div className=\"calendar_container\">\r\n      <div className=\"calendar_header\">\r\n        <div\r\n          className=\"arr left\"\r\n          data-date={monthSet.prev}\r\n          onClick={changeDate}\r\n        ></div>\r\n        <div className=\"calendar_header_data\">\r\n          <h2>{moment(selectDate).format(\"MMMM\").toUpperCase()}</h2>\r\n          <h2>{moment(selectDate).year()}</h2>\r\n        </div>\r\n        <div\r\n          className=\"arr right\"\r\n          data-date={monthSet.next}\r\n          onClick={changeDate}\r\n        ></div>\r\n      </div>\r\n      <DateIndicator selectDate={selectDate} setSelectDate={setSelectDate} />\r\n      <div className=\"days\">\r\n        {[\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"].map((day, index) => (\r\n          <div key={index} className=\"day-weeks\">\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"home-page\">\r\n      <div className=\"home-page_content\">\r\n        <h1>Choose the day for the meeting</h1>\r\n        <h2>\r\n          We encourage you to book your appointment online. This will save you\r\n          time.\r\n        </h2>\r\n      </div>\r\n      <div className=\"calendar\">\r\n        <Calendar />\r\n      </div>\r\n      <div className=\"home-page_bg\"></div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Aboutus.scss\";\r\n\r\nconst Aboutus = () => {\r\n  return (\r\n    <main className=\"about-us\">\r\n      <h2 className=\"about-us_title\">Lorem ipsum creation timelines</h2>\r\n      <p className=\"about-us_text\">\r\n        So how did the classical Latin become so incoherent? According to\r\n        McClintock, a 15th century typesetter likely scrambled part of Cicero's\r\n        De Finibus in order to provide placeholder text to mockup various fonts\r\n        for a type specimen book. It's difficult to find examples of lorem ipsum\r\n        in use before Letraset made it popular as a dummy text in the 1960s,\r\n        although McClintock says he remembers coming across the lorem ipsum\r\n        passage in a book of old metal type samples. So far he hasn't relocated\r\n        where he once saw the passage, but the popularity of Cicero in the 15th\r\n        century supports the theory that the filler text has been used for\r\n        centuries. And anyways, as Cecil Adams reasoned, “[Do you really] think\r\n        graphic arts supply houses were hiring classics scholars in the 1960s?”\r\n        Perhaps. But it seems reasonable to imagine that there was a version in\r\n        use far before the age of Letraset. McClintock wrote to Before & After\r\n        to explain his discovery; “What I find remarkable is that this text has\r\n        been the industry's standard dummy text ever since some printer in the\r\n        1500s took a galley of type and scrambled it to make a type specimen\r\n        book; it has survived not only four centuries of letter-by-letter\r\n        resetting but even the leap into electronic typesetting, essentially\r\n        unchanged except for an occasional 'ing' or 'y' thrown in. It's ironic\r\n        that when the then-understood Latin was scrambled, it became as\r\n        incomprehensible as Greek; the phrase 'it's Greek to me' and 'greeking'\r\n        have common semantic roots!” (The editors published his letter in a\r\n        correction headlined “Lorem Oopsum”).\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Aboutus;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hidenPopUp } from \"../../state/popUpSlice\";\r\nimport { RootState } from \"../../state/store\";\r\nimport \"./PopUp.scss\";\r\n\r\nfunction PopUp() {\r\n  const { month, day } = useSelector((state: RootState) => state.popUp);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"popUp\">\r\n      <div className=\"popUp_content\">\r\n        <button className=\"closeBtn\" onClick={() => dispatch(hidenPopUp())}>\r\n          <span>&#10005;</span>\r\n        </button>\r\n        <div className=\"content_month\">\r\n          <h3>Month</h3>\r\n          <p>{month}</p>\r\n        </div>\r\n        <div className=\"content_day\">\r\n          <h3>Day</h3>\r\n          <p>{day}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopUp;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Aboutus from \"./components/AboutUs/Aboutus\";\r\nimport { RootState } from \"./state/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PopUp from \"./components/PopUp/PopUp\";\r\n\r\nfunction App() {\r\n  const { show } = useSelector((state: RootState) => state.popUp);\r\n  return (\r\n    <div className=\"app\">\r\n      {show && <PopUp />}\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/calendar_task_werdevs\" component={Home} />\r\n        <Route exact path=\"/about\" component={Aboutus} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport popUpSlice from \"./popUpSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    popUp: popUpSlice,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { store } from './state/store';\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}